name: dev pipeline

on:
  pull_request:
    branches:
      - main
      - ak_exercise4 
  push:
    branches:
      - main
      - ankita_pytest 

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12'] 

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}  

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip  
          pip install -r requirements-dev.txt  
          pip install -r requirements.txt  

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-


      - name: Test with pytest and coverage on branch ${{ github.ref }}
        run: |
          pytest tests
          pytest --cov=note_api -n auto
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3  
        with:
          token: ${{ secrets.CODECOV_TOKEN }}  
        if: always()  
      - run: echo "Unit tests executed with status -> ${{ job.status }}."