name: dev_Pipeline

on: 
  push: 
    branches:
      - main
      - ankita_pytest
  pull_request:
    branches:
      - main  
      - ankita_pytest

jobs:
  check:
    runs-on: ubuntu-latest

    # Use the maximum number of CPUs available
    strategy:
      matrix:
        python-version: [3.9, 3.10.4, 3.11]  
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install pytest-cov codecov 

      - name: Run Tests with Coverage
        run: |
          pytest -n auto --maxfail=1 --cov=. --cov-report=term

      - name: Upload Coverage Report to Codecov
        if: success()
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml  # Specify the XML coverage report
          flags: unittests
          name: code-coverage-report

      - name: Run Snyk Security Scan
        uses: snyk/actions@v2   # Set up Snyk for security scanning

